// <auto-generated />
using System;
using Herbg.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Herbg.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241211202719_DbDataSeed")]
    partial class DbDataSeed
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Herbg.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShippingInformationAddress")
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ShippingInformationCity")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingInformationCountry")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("ShippingInformationFullName")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ShippingInformationZip")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Herbg.Models.Cart", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId")
                        .IsUnique();

                    b.ToTable("Carts");
                });

            modelBuilder.Entity("Herbg.Models.CartItem", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<string>("CartId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CartId");

                    b.HasIndex("CartId");

                    b.ToTable("CartItems");
                });

            modelBuilder.Entity("Herbg.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagePath")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("nvarchar(80)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Explore our range of medicinal herbs.",
                            ImagePath = "https://media.istockphoto.com/id/598931180/photo/basil-sage-dill-and-thyme-herbs.jpg?s=1024x1024&w=is&k=20&c=QgnLxS6TDDPoh_bbVAVqaXTe5TbyjIFge9sxSGSA__s=",
                            IsDeleted = false,
                            Name = "Medicinal Herbs"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Discover fresh and aromatic herbs.",
                            ImagePath = "https://media.istockphoto.com/id/504069254/photo/fresh-herbs-on-wooden-background.jpg?s=1024x1024&w=is&k=20&c=TdPOhT3xUMRt03AzvSfo8NKgzKusHbXMJv9Omw7zenw=",
                            IsDeleted = false,
                            Name = "Culinary Herbs"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Savor the soothing flavors of our premium herbal teas. Perfect for relaxation and wellness.",
                            ImagePath = "https://media.istockphoto.com/id/545799832/photo/two-cups-of-healthy-herbal-tea-with-mint-cinnamon-dried.jpg?s=1024x1024&w=is&k=20&c=kRpRimF1ufgUaXyl-wcFkQKvnU4YbMFwtpqKlFhG9oM=",
                            IsDeleted = false,
                            Name = "Herbal Teas"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Discover our selection of herbs for aromatherapy. Perfect for relaxation, focus, and mood enhancement.",
                            ImagePath = "https://media.istockphoto.com/id/546775666/photo/dried-herbs-and-essential-oils.jpg?s=1024x1024&w=is&k=20&c=4AK88NpTGMeqCViwoizSxc0B4Wr4nIsxia9hkboaA3M=",
                            IsDeleted = false,
                            Name = "Aromatherapy Herbs"
                        });
                });

            modelBuilder.Entity("Herbg.Models.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(40)
                        .HasColumnType("nvarchar(40)");

                    b.Property<string>("Tax")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("Companies");
                });

            modelBuilder.Entity("Herbg.Models.CompanyUser", b =>
                {
                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<string>("ClientId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("CompanyId", "ClientId");

                    b.HasIndex("ClientId");

                    b.ToTable("CompanyUsers");
                });

            modelBuilder.Entity("Herbg.Models.Manufactorer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("Manufactorers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "gk.strelbishte 124, Sofia",
                            Name = "Bilkibg"
                        },
                        new
                        {
                            Id = 2,
                            Address = "gk.lulin 24, Sofia",
                            Name = "Herbas"
                        },
                        new
                        {
                            Id = 3,
                            Address = "gk.vrajdebna 12, Sofia",
                            Name = "7Season"
                        });
                });

            modelBuilder.Entity("Herbg.Models.Order", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Herbg.Models.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImagePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ManufactorerId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("ManufactorerId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 3,
                            Description = "Herbal Tea Mix: A soothing blend of natural herbs crafted to promote relaxation, improve digestion, and boost overall wellness. Perfect for a calming break anytime.",
                            ImagePath = "https://media.istockphoto.com/id/955162416/photo/various-leaves-of-tea-and-spices-on-wooden-background.jpg?s=1024x1024&w=is&k=20&c=nGcLCxUl-mWMwpQWnngE9fC4AgzcQYho8FcjMsu0Ta8=",
                            IsDeleted = false,
                            ManufactorerId = 1,
                            Name = "Herbal Tea Mix",
                            Price = 14.99m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 4,
                            Description = "Lavender Oil: A pure, aromatic essential oil known for its calming properties, skin nourishment, and stress relief. Ideal for relaxation and self-care rituals.",
                            ImagePath = "https://media.istockphoto.com/id/585048326/photo/herbal-oil-and-lavender-flowers.jpg?s=1024x1024&w=is&k=20&c=jNZn3EevtNDr53UcPFilreSd1LOPyK0h5q784h9J8Ns=",
                            IsDeleted = false,
                            ManufactorerId = 2,
                            Name = "Lavender Oil",
                            Price = 10.99m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 2,
                            Description = "Dried Rosemary: A fragrant herb with a robust flavor, perfect for enhancing your culinary dishes or brewing into a soothing herbal tea.",
                            ImagePath = "https://media.istockphoto.com/id/610584404/photo/eco-craft-christmas-gift-boxes.jpg?s=1024x1024&w=is&k=20&c=HmXz1r7xDQBg83Mvcqn9roHR-3G5LzqHz5OfE_QqDB0=",
                            IsDeleted = false,
                            ManufactorerId = 3,
                            Name = "Rosemary Pack",
                            Price = 7.99m
                        },
                        new
                        {
                            Id = 4,
                            CategoryId = 2,
                            Description = "Basil Plant: A fresh and aromatic herb, ideal for home gardens, cooking, and adding a touch of greenery to your space.",
                            ImagePath = "https://media.istockphoto.com/id/535913985/photo/basil-in-a-clay-pot.jpg?s=1024x1024&w=is&k=20&c=GnxsfcEjKTGdOUEfHvq1E2Pr8ZBcYiu-n0GABgGSyNA=",
                            IsDeleted = false,
                            ManufactorerId = 1,
                            Name = "Basil Plant",
                            Price = 17.99m
                        },
                        new
                        {
                            Id = 5,
                            CategoryId = 4,
                            Description = "Eucalyptus Essential Oil: Known for its refreshing scent and healing properties, it aids in relaxation, focus, and relieving respiratory issues.",
                            ImagePath = "https://media.istockphoto.com/id/1053121442/photo/eucalyptus-essential-oil.jpg?s=1024x1024&w=is&k=20&c=94_16e0iLljAy_9fFWKUQa_6DhCM5MYCv1FmtrSnKIU=",
                            IsDeleted = false,
                            ManufactorerId = 2,
                            Name = "Eucalyptus Essential Oil",
                            Price = 15.99m
                        },
                        new
                        {
                            Id = 6,
                            CategoryId = 3,
                            Description = "Peppermint Tea: A refreshing herbal tea known for its soothing properties that help with digestion and reduce stress.",
                            ImagePath = "https://media.istockphoto.com/id/1355250220/photo/dry-herbal-green-tea-in-a-plate-with-cup-of-tea-and-eucalyptus-leaves-top-view-bright.jpg?s=1024x1024&w=is&k=20&c=06yP4sIe09ceFdG9nzGqCtEa54QqJAt1QogPZwED3X4=",
                            IsDeleted = false,
                            ManufactorerId = 2,
                            Name = "Peppermint Tea",
                            Price = 11.49m
                        },
                        new
                        {
                            Id = 7,
                            CategoryId = 3,
                            Description = "Chamomile Tea: A calming herbal tea made from chamomile flowers, perfect for winding down before bed and promoting better sleep.",
                            ImagePath = "https://media.istockphoto.com/id/1134246421/photo/cup-of-chamomile-tea-with-tea-bag.jpg?s=1024x1024&w=is&k=20&c=sHiQcQ0RND7zkmcXsbcAgnUIXBRG1ax54f0zzwJQ8ZM=",
                            IsDeleted = false,
                            ManufactorerId = 3,
                            Name = "Chamomile Tea",
                            Price = 12.50m
                        },
                        new
                        {
                            Id = 8,
                            CategoryId = 4,
                            Description = "Aloe Vera Gel: Known for its soothing and healing properties, ideal for skincare, sunburns, and hydration.",
                            ImagePath = "https://media.istockphoto.com/id/1215011574/photo/aloe-vera-gel-close-up-sliced-aloe-vera-plants-leaf-and-gel-with-wooden-spoon.jpg?s=1024x1024&w=is&k=20&c=fm8eVWQIF53Q0-zRZTMgXB3Ve3D2_vA1JpbYwlU5-hk=",
                            IsDeleted = false,
                            ManufactorerId = 1,
                            Name = "Aloe Vera Gel",
                            Price = 19.99m
                        },
                        new
                        {
                            Id = 9,
                            CategoryId = 2,
                            Description = "Turmeric Powder: A powerful antioxidant and anti-inflammatory spice, perfect for adding flavor to dishes or making turmeric tea.",
                            ImagePath = "https://media.istockphoto.com/id/965503302/photo/turmeric-powder-and-roots.jpg?s=1024x1024&w=is&k=20&c=U3hFkU4b8ODTK_9o4kMYEQbfW_JGC5-FbFd4uZQaHSE=",
                            IsDeleted = false,
                            ManufactorerId = 3,
                            Name = "Turmeric Powder",
                            Price = 8.99m
                        },
                        new
                        {
                            Id = 10,
                            CategoryId = 4,
                            Description = "Rosemary Essential Oil: A versatile oil for aromatherapy, known for its energizing, memory-boosting, and stress-relieving benefits.",
                            ImagePath = "https://media.istockphoto.com/id/589137972/photo/small-bottle-of-burdock-extract.jpg?s=1024x1024&w=is&k=20&c=vH22VbCqRIPBstTDj6n5vuKjIICEiIxRf7fgFZZ9lmw=",
                            IsDeleted = false,
                            ManufactorerId = 3,
                            Name = "Rosemary Essential Oil",
                            Price = 13.99m
                        },
                        new
                        {
                            Id = 11,
                            CategoryId = 1,
                            Description = "Sage Bundle: Dried sage leaves for smudging and cleansing, offering spiritual and emotional benefits for relaxation and focus.",
                            ImagePath = "https://media.istockphoto.com/id/1460937551/photo/smoldering-white-sage-smudge-stick.jpg?s=1024x1024&w=is&k=20&c=agi9O7Z28qVwfViQBdyJA20okfFw62_30RszMAv-tHA=",
                            IsDeleted = false,
                            ManufactorerId = 2,
                            Name = "Sage Bundle",
                            Price = 9.99m
                        },
                        new
                        {
                            Id = 12,
                            CategoryId = 3,
                            Description = "Lemongrass Tea: A refreshing, citrusy tea made from lemongrass, known for its ability to promote digestion and reduce anxiety.",
                            ImagePath = "https://media.istockphoto.com/id/546792864/photo/thai-herbal-drinks-lemon-grass.jpg?s=1024x1024&w=is&k=20&c=Mz-14vRpNlWawyOF3BtwS-gDrpgvF-Y1id9-wcigFRc=",
                            IsDeleted = false,
                            ManufactorerId = 1,
                            Name = "Lemongrass Tea",
                            Price = 11.25m
                        },
                        new
                        {
                            Id = 13,
                            CategoryId = 2,
                            Description = "Cinnamon Stick Pack: A bundle of dried cinnamon sticks, perfect for brewing in tea, adding to cooking, or for aromatic purposes.",
                            ImagePath = "https://media.istockphoto.com/id/1214648653/photo/cinnamon-sticks-with-rope-isolated-on-white-background.jpg?s=1024x1024&w=is&k=20&c=et2CT61Hat3vgIhQ1ScDtiRszza7khjNXkACwLmCPcg=",
                            IsDeleted = false,
                            ManufactorerId = 1,
                            Name = "Cinnamon Stick Pack",
                            Price = 6.50m
                        },
                        new
                        {
                            Id = 14,
                            CategoryId = 4,
                            Description = "Aromatherapy Diffuser: Enhance your space with the calming effects of essential oils. This ultrasonic diffuser disperses oils for a soothing atmosphere, perfect for relaxation, focus, and stress relief.",
                            ImagePath = "https://media.istockphoto.com/id/1366419259/photo/humidifier-with-steam-moisturizing-air-at-home.jpg?s=1024x1024&w=is&k=20&c=0N59shgTzPOYmnLtHcdw8MbSMh2ta792-mi6TOPKYv8=",
                            IsDeleted = false,
                            ManufactorerId = 2,
                            Name = "Aromatherapy Diffuser",
                            Price = 20.99m
                        });
                });

            modelBuilder.Entity("Herbg.Models.ProductOrder", b =>
                {
                    b.Property<string>("OrderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderId", "ProductId");

                    b.HasIndex("ProductId");

                    b.ToTable("ProductOrders");
                });

            modelBuilder.Entity("Herbg.Models.ProductSize", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("SizeId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "SizeId");

                    b.HasIndex("SizeId");

                    b.ToTable("ProductSizes");
                });

            modelBuilder.Entity("Herbg.Models.Review", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Reviews");
                });

            modelBuilder.Entity("Herbg.Models.Size", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ProductSize")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Sizes");
                });

            modelBuilder.Entity("Herbg.Models.Wishlist", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("AddedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.HasIndex("ProductId");

                    b.ToTable("Wishlists");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Herbg.Models.Cart", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", "Client")
                        .WithOne("Cart")
                        .HasForeignKey("Herbg.Models.Cart", "ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Herbg.Models.CartItem", b =>
                {
                    b.HasOne("Herbg.Models.Cart", "Cart")
                        .WithMany("CartItems")
                        .HasForeignKey("CartId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.Product", "Product")
                        .WithMany("CartItems")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Cart");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Herbg.Models.CompanyUser", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", "Client")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.Company", "Company")
                        .WithMany("CompanyUsers")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Company");
                });

            modelBuilder.Entity("Herbg.Models.Order", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", "Client")
                        .WithMany("Orders")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Herbg.Models.Product", b =>
                {
                    b.HasOne("Herbg.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.Manufactorer", "Manufactorer")
                        .WithMany("Products")
                        .HasForeignKey("ManufactorerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Manufactorer");
                });

            modelBuilder.Entity("Herbg.Models.ProductOrder", b =>
                {
                    b.HasOne("Herbg.Models.Order", "Order")
                        .WithMany("ProductOrders")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.Product", "Product")
                        .WithMany("ProductOrders")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Herbg.Models.ProductSize", b =>
                {
                    b.HasOne("Herbg.Models.Product", "Product")
                        .WithMany("ProductSizes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.Size", "Size")
                        .WithMany("ProductSizes")
                        .HasForeignKey("SizeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Product");

                    b.Navigation("Size");
                });

            modelBuilder.Entity("Herbg.Models.Review", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", "Client")
                        .WithMany("Reviews")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.Product", "Product")
                        .WithMany("Reviews")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Herbg.Models.Wishlist", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", "Client")
                        .WithMany("Wishlists")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.Product", "Product")
                        .WithMany("Wishlists")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Herbg.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Herbg.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Herbg.Models.ApplicationUser", b =>
                {
                    b.Navigation("Cart")
                        .IsRequired();

                    b.Navigation("CompanyUsers");

                    b.Navigation("Orders");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Herbg.Models.Cart", b =>
                {
                    b.Navigation("CartItems");
                });

            modelBuilder.Entity("Herbg.Models.Category", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Herbg.Models.Company", b =>
                {
                    b.Navigation("CompanyUsers");
                });

            modelBuilder.Entity("Herbg.Models.Manufactorer", b =>
                {
                    b.Navigation("Products");
                });

            modelBuilder.Entity("Herbg.Models.Order", b =>
                {
                    b.Navigation("ProductOrders");
                });

            modelBuilder.Entity("Herbg.Models.Product", b =>
                {
                    b.Navigation("CartItems");

                    b.Navigation("ProductOrders");

                    b.Navigation("ProductSizes");

                    b.Navigation("Reviews");

                    b.Navigation("Wishlists");
                });

            modelBuilder.Entity("Herbg.Models.Size", b =>
                {
                    b.Navigation("ProductSizes");
                });
#pragma warning restore 612, 618
        }
    }
}
